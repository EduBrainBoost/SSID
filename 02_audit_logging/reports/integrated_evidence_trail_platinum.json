{
  "metadata": {
    "report_type": "integrated_evidence_trail",
    "report_version": "2.0.0",
    "generated_at": "2025-10-16T17:54:05.178170+00:00",
    "purpose": "PLATINUM Certification - Evidence Trail Integration"
  },
  "summary": {
    "total_evidence_entries": 271,
    "evidence_sources": [
      "worm_storage",
      "anti_gaming_log",
      "evidence_trail",
      "test_certificate"
    ],
    "source_diversity_score": 4,
    "temporal_span_hours": 0.0
  },
  "time_series_fingerprint": {
    "fingerprint_hash": "33fad5180041e933914327792c65a534004cea33580fe33638bae8c6c76220422c7aaf1c0710ad134aac914b01dd65db9347a12c8677e03cab08655e257b29d0",
    "fingerprint_blake2b": "6dbd34d05d4b831047ee4db3a68d9e445db1a19c6b0d55a304e0ca89b9892b000b2f590863c925bfd66b574e7c462e9b4f8f1d5bbbfaf92cb0866d01ef2b6913",
    "total_entries": 271,
    "temporal_analysis": {
      "start_time": "",
      "end_time": "2025-10-16T17:52:42.024756+00:00",
      "avg_interval_seconds": 22987.11,
      "max_gap_seconds": 461762.61,
      "gap_warning": true
    },
    "source_diversity": {
      "worm_storage": 36,
      "anti_gaming_log": 202,
      "evidence_trail": 32,
      "test_certificate": 1
    },
    "diversity_score": 4,
    "generated_at": "2025-10-16T17:54:05.176181+00:00"
  },
  "diff_map": {
    "total_transitions": 270,
    "transitions": [
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": null,
        "from_hash": "no_hash",
        "to_hash": "no_hash",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": null,
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "no_hash",
        "to_hash": "546a5d54ae3175b2...",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "546a5d54ae3175b2...",
        "to_hash": "10c2160cdd7287ab...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "10c2160cdd7287ab...",
        "to_hash": "7e5f5894a6a4b1e8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "7e5f5894a6a4b1e8...",
        "to_hash": "0214636f8afa27b1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "0214636f8afa27b1...",
        "to_hash": "2dea4f847757c1e1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "2dea4f847757c1e1...",
        "to_hash": "f86eca0e19c55e00...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "f86eca0e19c55e00...",
        "to_hash": "4f039c506ace55cd...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "4f039c506ace55cd...",
        "to_hash": "04b913744b31eca4...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "04b913744b31eca4...",
        "to_hash": "c31c41009eeeac18...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "c31c41009eeeac18...",
        "to_hash": "2868dbfe24c80ff8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "2868dbfe24c80ff8...",
        "to_hash": "e3184fe691c66eeb...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "e3184fe691c66eeb...",
        "to_hash": "b77aad2eec18817d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b77aad2eec18817d...",
        "to_hash": "b0af56912a98a6f8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b0af56912a98a6f8...",
        "to_hash": "3a6f5758d7e508c1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "3a6f5758d7e508c1...",
        "to_hash": "edd6e69865d59e96...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "edd6e69865d59e96...",
        "to_hash": "dfe55e6aa546769b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "dfe55e6aa546769b...",
        "to_hash": "433a1014c2e22d36...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "433a1014c2e22d36...",
        "to_hash": "d375f0a9735d9da3...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "d375f0a9735d9da3...",
        "to_hash": "b7f3b81ee5aef583...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b7f3b81ee5aef583...",
        "to_hash": "c53c73ed8c2266ed...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "c53c73ed8c2266ed...",
        "to_hash": "44413adc486ec0c7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "44413adc486ec0c7...",
        "to_hash": "b80e6409493d4db4...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b80e6409493d4db4...",
        "to_hash": "47ada2b78fd2c28c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "47ada2b78fd2c28c...",
        "to_hash": "6130c3d5781ab620...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "6130c3d5781ab620...",
        "to_hash": "b071a08ac2bded7a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b071a08ac2bded7a...",
        "to_hash": "1fbcf10ebab91907...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "1fbcf10ebab91907...",
        "to_hash": "712802c8f5b5600b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "712802c8f5b5600b...",
        "to_hash": "b26377945375b8b9...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b26377945375b8b9...",
        "to_hash": "b3dfd65f38f7637f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_anomaly_rate",
        "from_hash": "b3dfd65f38f7637f...",
        "to_hash": "f50eafc69e019945...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_anomaly_rate",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "f50eafc69e019945...",
        "to_hash": "14a05346b41cb1d7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "14a05346b41cb1d7...",
        "to_hash": "a50e4ba6df6fddd1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "a50e4ba6df6fddd1...",
        "to_hash": "5ff01addab4d9a81...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "5ff01addab4d9a81...",
        "to_hash": "08256693ece04380...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "08256693ece04380...",
        "to_hash": "9002547273e4a2aa...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "9002547273e4a2aa...",
        "to_hash": "180eb22ce799fd50...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "180eb22ce799fd50...",
        "to_hash": "a7a94801829cd049...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "a7a94801829cd049...",
        "to_hash": "1812726bd1c76baa...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "1812726bd1c76baa...",
        "to_hash": "945cedb84d29b389...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "945cedb84d29b389...",
        "to_hash": "86a36aab8c8458c0...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "86a36aab8c8458c0...",
        "to_hash": "86cfddfdfbe2fa2b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "86cfddfdfbe2fa2b...",
        "to_hash": "8bad41c17c0daaeb...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "8bad41c17c0daaeb...",
        "to_hash": "0ac1da6d90633e48...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "0ac1da6d90633e48...",
        "to_hash": "65105481b20859b2...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "65105481b20859b2...",
        "to_hash": "0cf63eac9cc3b8da...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "0cf63eac9cc3b8da...",
        "to_hash": "fdd6d3d3c19a5f08...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "fdd6d3d3c19a5f08...",
        "to_hash": "f106a29dfd6ad06c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "f106a29dfd6ad06c...",
        "to_hash": "38c18fb14cad4183...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "38c18fb14cad4183...",
        "to_hash": "091286e637ad2035...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "091286e637ad2035...",
        "to_hash": "1c4332a471a3e053...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "1c4332a471a3e053...",
        "to_hash": "5482f59a8cb05ad1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "5482f59a8cb05ad1...",
        "to_hash": "67d6aa7be601b766...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "67d6aa7be601b766...",
        "to_hash": "4ddc721bb3fe0558...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "4ddc721bb3fe0558...",
        "to_hash": "c1bc524064e0861c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "c1bc524064e0861c...",
        "to_hash": "67f041cadd021da4...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "67f041cadd021da4...",
        "to_hash": "f57c9a6fd7d40adc...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "f57c9a6fd7d40adc...",
        "to_hash": "4dfd2089f5f497fe...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "4dfd2089f5f497fe...",
        "to_hash": "95044537a045c2ff...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "95044537a045c2ff...",
        "to_hash": "20c95613542e0d76...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "20c95613542e0d76...",
        "to_hash": "da684bc149b6a455...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "da684bc149b6a455...",
        "to_hash": "4c62c1cd608c0d6d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "4c62c1cd608c0d6d...",
        "to_hash": "493e8212c0bc583d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "493e8212c0bc583d...",
        "to_hash": "e362a4169143676b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "e362a4169143676b...",
        "to_hash": "402f05a92ed8182b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_circular_deps",
        "from_hash": "402f05a92ed8182b...",
        "to_hash": "7400c4ae871a4224...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_circular_deps",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "7400c4ae871a4224...",
        "to_hash": "65d52103a79e4fd0...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "65d52103a79e4fd0...",
        "to_hash": "89c8e14c7eebae6b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "89c8e14c7eebae6b...",
        "to_hash": "4bb480ebe17c603e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "4bb480ebe17c603e...",
        "to_hash": "5ef08b1a35b81c4b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "5ef08b1a35b81c4b...",
        "to_hash": "7edc8338e417ad25...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "7edc8338e417ad25...",
        "to_hash": "8e1b4c635a1893da...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "8e1b4c635a1893da...",
        "to_hash": "e7c8c48e962f9699...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "e7c8c48e962f9699...",
        "to_hash": "bae39a6548839b4c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "bae39a6548839b4c...",
        "to_hash": "cef23e42fe90d00b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "cef23e42fe90d00b...",
        "to_hash": "131ebd74e12738f9...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "131ebd74e12738f9...",
        "to_hash": "e62a323bb9b2109e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "e62a323bb9b2109e...",
        "to_hash": "b19cc0bd2dd90685...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "b19cc0bd2dd90685...",
        "to_hash": "f47f4778c8d94670...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "f47f4778c8d94670...",
        "to_hash": "061f3f5b94c089e3...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "061f3f5b94c089e3...",
        "to_hash": "6e7b4b1b40540c1a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "6e7b4b1b40540c1a...",
        "to_hash": "84c2ce74b6197381...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "84c2ce74b6197381...",
        "to_hash": "1ffb45efe62abe42...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "1ffb45efe62abe42...",
        "to_hash": "a64b52814a4c1f7a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "a64b52814a4c1f7a...",
        "to_hash": "7178634c79235d2d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "7178634c79235d2d...",
        "to_hash": "f583eb292195ea2c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "f583eb292195ea2c...",
        "to_hash": "e83ac382d6c18dee...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "e83ac382d6c18dee...",
        "to_hash": "3ea467852684703d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "3ea467852684703d...",
        "to_hash": "8daff1295965f67f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "8daff1295965f67f...",
        "to_hash": "e77f751efba4b47c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "e77f751efba4b47c...",
        "to_hash": "2d85c979f40872b7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "2d85c979f40872b7...",
        "to_hash": "5c4acd1383de1da3...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "5c4acd1383de1da3...",
        "to_hash": "d741b59898fb3860...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "d741b59898fb3860...",
        "to_hash": "c8f802878d106041...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "c8f802878d106041...",
        "to_hash": "70523bd58ba2f3ae...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "70523bd58ba2f3ae...",
        "to_hash": "710c9b060fdf8f7b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "710c9b060fdf8f7b...",
        "to_hash": "75c8c3f1fce4355b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "75c8c3f1fce4355b...",
        "to_hash": "f47a51168fbd1328...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "f47a51168fbd1328...",
        "to_hash": "e8388e4bde2a8487...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "e8388e4bde2a8487...",
        "to_hash": "1d09ff1f55b444cd...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "1d09ff1f55b444cd...",
        "to_hash": "20fcf0781aac1cd7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "20fcf0781aac1cd7...",
        "to_hash": "d36cf07a49da979d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_dependency_graph",
        "from_hash": "d36cf07a49da979d...",
        "to_hash": "556e9b1390686a45...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_dependency_graph",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "556e9b1390686a45...",
        "to_hash": "49038812d6e3771e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "49038812d6e3771e...",
        "to_hash": "03d63da5069b36cf...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "03d63da5069b36cf...",
        "to_hash": "8ea72cc08f44cabe...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "8ea72cc08f44cabe...",
        "to_hash": "1639c816e82baf8e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "1639c816e82baf8e...",
        "to_hash": "30c1e9ea8f3df1e1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "30c1e9ea8f3df1e1...",
        "to_hash": "1edecd50af84c5b8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "1edecd50af84c5b8...",
        "to_hash": "dc8113cfc27a7a02...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "dc8113cfc27a7a02...",
        "to_hash": "3160a1530e79a77d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "3160a1530e79a77d...",
        "to_hash": "dac141a1ef34866e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "dac141a1ef34866e...",
        "to_hash": "eed7c40c9a3c85d3...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "eed7c40c9a3c85d3...",
        "to_hash": "74954cd6bc36aa3f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "74954cd6bc36aa3f...",
        "to_hash": "6fb7096cdaff0eb9...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "6fb7096cdaff0eb9...",
        "to_hash": "f8794da377692467...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "f8794da377692467...",
        "to_hash": "0cde466c61bf9a12...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "0cde466c61bf9a12...",
        "to_hash": "b286e565bd58dd6d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "b286e565bd58dd6d...",
        "to_hash": "5464c93333d53930...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "5464c93333d53930...",
        "to_hash": "f9c27806baf02514...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "f9c27806baf02514...",
        "to_hash": "b5bb58894f8a7011...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "b5bb58894f8a7011...",
        "to_hash": "5e5addf5e273d756...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "5e5addf5e273d756...",
        "to_hash": "4c2ca8b312d8bd1d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "4c2ca8b312d8bd1d...",
        "to_hash": "694d7ac03e9a5391...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "694d7ac03e9a5391...",
        "to_hash": "ff7a082a11809d77...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "ff7a082a11809d77...",
        "to_hash": "99afc410ad973f2d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "99afc410ad973f2d...",
        "to_hash": "4069742d60aba722...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "4069742d60aba722...",
        "to_hash": "039e34801d6d4f92...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "039e34801d6d4f92...",
        "to_hash": "d935eeb51dee0586...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "d935eeb51dee0586...",
        "to_hash": "1a741975378478f8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "1a741975378478f8...",
        "to_hash": "5b8052769aeb4f3a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "5b8052769aeb4f3a...",
        "to_hash": "19a02f7dfabb27cc...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "19a02f7dfabb27cc...",
        "to_hash": "982509f904f96387...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "982509f904f96387...",
        "to_hash": "d70b53e02185e92e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "d70b53e02185e92e...",
        "to_hash": "b325dd148bbbcd26...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_overfitting",
        "from_hash": "b325dd148bbbcd26...",
        "to_hash": "48ea50d28fbc2b93...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_overfitting",
        "to_entry": "anti_gaming_replay",
        "from_hash": "48ea50d28fbc2b93...",
        "to_hash": "153c4dd6b66f1711...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "153c4dd6b66f1711...",
        "to_hash": "2332f98411293392...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "2332f98411293392...",
        "to_hash": "d556218ca00249f3...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "d556218ca00249f3...",
        "to_hash": "aa8b67443a358fa1...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "aa8b67443a358fa1...",
        "to_hash": "4283b9c84c545bc0...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "4283b9c84c545bc0...",
        "to_hash": "81eb9a018969f59c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "81eb9a018969f59c...",
        "to_hash": "ea2476eb604d8234...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "ea2476eb604d8234...",
        "to_hash": "92aa730a32d36b22...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "92aa730a32d36b22...",
        "to_hash": "1a149bbe9a1daab2...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "1a149bbe9a1daab2...",
        "to_hash": "af9e036a4a0ea317...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "af9e036a4a0ea317...",
        "to_hash": "46c5c328260e6746...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "46c5c328260e6746...",
        "to_hash": "cf4d7c55cc71af3b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "cf4d7c55cc71af3b...",
        "to_hash": "733b5c478e91e1f7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "733b5c478e91e1f7...",
        "to_hash": "b09fbc18d17cee1b...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "b09fbc18d17cee1b...",
        "to_hash": "a8341e4903ebcc92...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "a8341e4903ebcc92...",
        "to_hash": "90cde0e16bf82c18...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "90cde0e16bf82c18...",
        "to_hash": "c6490b91039a23ce...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "c6490b91039a23ce...",
        "to_hash": "f491cf3cd84a41e4...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "f491cf3cd84a41e4...",
        "to_hash": "f0682b526690232f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "f0682b526690232f...",
        "to_hash": "f870f81f1d639821...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "f870f81f1d639821...",
        "to_hash": "5e5f8ae40946dddf...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "5e5f8ae40946dddf...",
        "to_hash": "99e90ac84154336a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "99e90ac84154336a...",
        "to_hash": "8f3df71711eec52d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "8f3df71711eec52d...",
        "to_hash": "594a6502bc816cf5...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_replay",
        "from_hash": "594a6502bc816cf5...",
        "to_hash": "2a671e1939d68541...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_replay",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "2a671e1939d68541...",
        "to_hash": "f4e9df76a7025706...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "f4e9df76a7025706...",
        "to_hash": "79510e0a450220af...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "79510e0a450220af...",
        "to_hash": "93e751f08db13363...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "93e751f08db13363...",
        "to_hash": "90b3ab06de2aa283...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "90b3ab06de2aa283...",
        "to_hash": "0072b23d6ae6726c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "0072b23d6ae6726c...",
        "to_hash": "3e0d513303219850...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "3e0d513303219850...",
        "to_hash": "89e7ec833f8deee7...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "89e7ec833f8deee7...",
        "to_hash": "94b4d463969f547d...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "94b4d463969f547d...",
        "to_hash": "d08e94c0b7b61faa...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "d08e94c0b7b61faa...",
        "to_hash": "9cd397aa6faaf885...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "9cd397aa6faaf885...",
        "to_hash": "5c8e653a6f742d87...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "5c8e653a6f742d87...",
        "to_hash": "276f7affc37d050e...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "276f7affc37d050e...",
        "to_hash": "22eab8be8598799a...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "22eab8be8598799a...",
        "to_hash": "c98762953d49dbaa...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "c98762953d49dbaa...",
        "to_hash": "09aebfef185a33cf...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "09aebfef185a33cf...",
        "to_hash": "3ab5b28700057bf8...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "3ab5b28700057bf8...",
        "to_hash": "b96ea59da8c0d2fa...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "b96ea59da8c0d2fa...",
        "to_hash": "fe73a6532884e980...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "fe73a6532884e980...",
        "to_hash": "1d9ccc9d9aafc72c...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "1d9ccc9d9aafc72c...",
        "to_hash": "df953abaab2968e2...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "df953abaab2968e2...",
        "to_hash": "0eb88c0470be2f97...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "0eb88c0470be2f97...",
        "to_hash": "b42f223bcaf365ce...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "b42f223bcaf365ce...",
        "to_hash": "639b62a977ac8239...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "639b62a977ac8239...",
        "to_hash": "57e59360ca6c2a52...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "57e59360ca6c2a52...",
        "to_hash": "b4cc92f60239c025...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "anti_gaming_time_skew",
        "from_hash": "b4cc92f60239c025...",
        "to_hash": "e3c73feebfb19505...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_time_skew",
        "to_entry": "blueprint5_bundle_hashes",
        "from_hash": "e3c73feebfb19505...",
        "to_hash": "3600c458764d57cd...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> evidence_trail"
      },
      {
        "from_entry": "blueprint5_bundle_hashes",
        "to_entry": "blueprint5_bundle_merkle",
        "from_hash": "3600c458764d57cd...",
        "to_hash": "f7f39e22cf0cfd17...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "blueprint5_bundle_merkle",
        "to_entry": "blueprint5_merkle_root",
        "from_hash": "f7f39e22cf0cfd17...",
        "to_hash": "3199d3b426bb3b17...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "blueprint5_merkle_root",
        "to_entry": "continuum_proof_chain_v10",
        "from_hash": "3199d3b426bb3b17...",
        "to_hash": "7f54bf226666be45...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "continuum_proof_chain_v10",
        "to_entry": "interfederated_proof_chain",
        "from_hash": "7f54bf226666be45...",
        "to_hash": "b8734409c5906e5d...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "interfederated_proof_chain",
        "to_entry": "meta_coherence_matrix",
        "from_hash": "b8734409c5906e5d...",
        "to_hash": "1cb588c304694170...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "meta_coherence_matrix",
        "to_entry": "meta_continuum_proof_chain",
        "from_hash": "1cb588c304694170...",
        "to_hash": "23252042d42fb3a5...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "meta_continuum_proof_chain",
        "to_entry": "meta_co_truth_matrix",
        "from_hash": "23252042d42fb3a5...",
        "to_hash": "38649aa3b8069b8e...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "meta_co_truth_matrix",
        "to_entry": "meta_interfederation_proof_chain",
        "from_hash": "38649aa3b8069b8e...",
        "to_hash": "70cd4220bb7c41eb...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "meta_interfederation_proof_chain",
        "to_entry": "proof_nexus_keys",
        "from_hash": "70cd4220bb7c41eb...",
        "to_hash": "4b3f311cf6fe2ba9...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "proof_nexus_keys",
        "to_entry": "proof_nexus_merkle",
        "from_hash": "4b3f311cf6fe2ba9...",
        "to_hash": "45617602e5c096f0...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "proof_nexus_merkle",
        "to_entry": "root24_continuum_proof_chain",
        "from_hash": "45617602e5c096f0...",
        "to_hash": "d71de029c2b025fa...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "root24_continuum_proof_chain",
        "to_entry": "root_24_certification_proof",
        "from_hash": "d71de029c2b025fa...",
        "to_hash": "8fe3927e845d9450...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "root_24_certification_proof",
        "to_entry": "dependency_graph",
        "from_hash": "8fe3927e845d9450...",
        "to_hash": "126be7d4449821c9...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "dependency_graph",
        "to_entry": "canonical_edges_20251014_111202",
        "from_hash": "126be7d4449821c9...",
        "to_hash": "b632e8cd61368294...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "canonical_edges_20251014_111202",
        "to_entry": "import_resolution_report_20251014_111202",
        "from_hash": "b632e8cd61368294...",
        "to_hash": "1fb35ff5a55ac905...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "import_resolution_report_20251014_111202",
        "to_entry": "resolved_edges_20251014_111202",
        "from_hash": "1fb35ff5a55ac905...",
        "to_hash": "55ef8336820ba302...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "resolved_edges_20251014_111202",
        "to_entry": "registry_anchor",
        "from_hash": "55ef8336820ba302...",
        "to_hash": "6cf1b8d19f254a88...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "registry_anchor",
        "to_entry": "test_hygiene_certificate_v1",
        "from_hash": "6cf1b8d19f254a88...",
        "to_hash": "9cdd6f9b366a0aad...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> test_certificate"
      },
      {
        "from_entry": "test_hygiene_certificate_v1",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "9cdd6f9b366a0aad...",
        "to_hash": "fd6712ab902f26bf...",
        "time_delta_seconds": 0.0,
        "source_transition": "test_certificate -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "fd6712ab902f26bf...",
        "to_hash": "012d481a50acf537...",
        "time_delta_seconds": 72.823845,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "012d481a50acf537...",
        "to_hash": "3d155cc217d1524d...",
        "time_delta_seconds": 22.768073,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "3d155cc217d1524d...",
        "to_hash": "70917965d7c2388b...",
        "time_delta_seconds": 0.183262,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "70917965d7c2388b...",
        "to_hash": "2db7efcae9fe0de8...",
        "time_delta_seconds": 0.315241,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "2db7efcae9fe0de8...",
        "to_hash": "33de4234ea8d7b13...",
        "time_delta_seconds": 725.443919,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "33de4234ea8d7b13...",
        "to_hash": "b870b43d7621f958...",
        "time_delta_seconds": 897.435421,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "b870b43d7621f958...",
        "to_hash": "21c10e76ca9d835c...",
        "time_delta_seconds": 1051.709815,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "21c10e76ca9d835c...",
        "to_hash": "16a9889fad1bfbd5...",
        "time_delta_seconds": 0.191945,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "16a9889fad1bfbd5...",
        "to_hash": "371530f7087dda79...",
        "time_delta_seconds": 0.298668,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "anti_gaming_duplicate_hashes",
        "from_hash": "371530f7087dda79...",
        "to_hash": "c5e3c256ac7ec0f5...",
        "time_delta_seconds": 2006.580875,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_duplicate_hashes",
        "to_entry": "continuum_proof_chain",
        "from_hash": "c5e3c256ac7ec0f5...",
        "to_hash": "0d9f36e93e783e82...",
        "time_delta_seconds": 461762.605288,
        "source_transition": "anti_gaming_log -> evidence_trail"
      },
      {
        "from_entry": "continuum_proof_chain",
        "to_entry": "version_merkle_chain_v1",
        "from_hash": "0d9f36e93e783e82...",
        "to_hash": "920fc2bfe4d716b7...",
        "time_delta_seconds": 86977.255671,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v1",
        "to_entry": "version_merkle_chain_v2",
        "from_hash": "920fc2bfe4d716b7...",
        "to_hash": "c64c4e094376e65b...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v2",
        "to_entry": "version_merkle_chain_v3",
        "from_hash": "c64c4e094376e65b...",
        "to_hash": "1471ca0adbe5ab4d...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v3",
        "to_entry": "version_merkle_chain_v4",
        "from_hash": "1471ca0adbe5ab4d...",
        "to_hash": "ddd90c4b82ab51c3...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v4",
        "to_entry": "version_merkle_chain_v5",
        "from_hash": "ddd90c4b82ab51c3...",
        "to_hash": "d768ae9a1b176a4a...",
        "time_delta_seconds": 0.009452,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v5",
        "to_entry": "version_merkle_chain_v6",
        "from_hash": "d768ae9a1b176a4a...",
        "to_hash": "309317548ec23bfb...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v6",
        "to_entry": "version_merkle_chain_v7",
        "from_hash": "309317548ec23bfb...",
        "to_hash": "462c340fe78c41f8...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v7",
        "to_entry": "version_merkle_chain_v8",
        "from_hash": "462c340fe78c41f8...",
        "to_hash": "e550b3881e0a25ce...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v8",
        "to_entry": "version_merkle_chain_v10",
        "from_hash": "e550b3881e0a25ce...",
        "to_hash": "1c63a6a622c35b9e...",
        "time_delta_seconds": 0.006185,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v10",
        "to_entry": "version_merkle_chain_v9",
        "from_hash": "1c63a6a622c35b9e...",
        "to_hash": "7c722a94deb336da...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v9",
        "to_entry": "version_merkle_chain_v11",
        "from_hash": "7c722a94deb336da...",
        "to_hash": "46903d734b30ac93...",
        "time_delta_seconds": 0.002171,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v11",
        "to_entry": "version_merkle_chain_v12",
        "from_hash": "46903d734b30ac93...",
        "to_hash": "0c2c5728af3e3dcf...",
        "time_delta_seconds": 0.0,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v12",
        "to_entry": "version_merkle_chain_v1_v12",
        "from_hash": "0c2c5728af3e3dcf...",
        "to_hash": "ea6f67300a74e940...",
        "time_delta_seconds": 0.001604,
        "source_transition": "evidence_trail -> evidence_trail"
      },
      {
        "from_entry": "version_merkle_chain_v1_v12",
        "to_entry": "anti_gaming_compliance_1",
        "from_hash": "ea6f67300a74e940...",
        "to_hash": "52dd15fbe37e6f4f...",
        "time_delta_seconds": 247867.139237,
        "source_transition": "evidence_trail -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_compliance_1",
        "to_entry": "anti_gaming_compliance_2",
        "from_hash": "52dd15fbe37e6f4f...",
        "to_hash": "52dd15fbe37e6f4f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_compliance_2",
        "to_entry": "anti_gaming_compliance_3",
        "from_hash": "52dd15fbe37e6f4f...",
        "to_hash": "52dd15fbe37e6f4f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_compliance_3",
        "to_entry": "anti_gaming_compliance_4",
        "from_hash": "52dd15fbe37e6f4f...",
        "to_hash": "52dd15fbe37e6f4f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_compliance_4",
        "to_entry": "anti_gaming_compliance_5",
        "from_hash": "52dd15fbe37e6f4f...",
        "to_hash": "52dd15fbe37e6f4f...",
        "time_delta_seconds": 0.0,
        "source_transition": "anti_gaming_log -> anti_gaming_log"
      },
      {
        "from_entry": "anti_gaming_compliance_5",
        "to_entry": "demo_entry_0",
        "from_hash": "52dd15fbe37e6f4f...",
        "to_hash": "d36db9394e801643...",
        "time_delta_seconds": 3123.870417,
        "source_transition": "anti_gaming_log -> worm_storage"
      },
      {
        "from_entry": "demo_entry_0",
        "to_entry": "demo_entry_0",
        "from_hash": "d36db9394e801643...",
        "to_hash": "89781911bb3c1848...",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": "demo_entry_0",
        "to_entry": "demo_entry_1",
        "from_hash": "89781911bb3c1848...",
        "to_hash": "5851b4638ad8b797...",
        "time_delta_seconds": 0.002695,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": "demo_entry_1",
        "to_entry": "demo_entry_1",
        "from_hash": "5851b4638ad8b797...",
        "to_hash": "683347308643b664...",
        "time_delta_seconds": 0.0,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": "demo_entry_1",
        "to_entry": "demo_entry_2",
        "from_hash": "683347308643b664...",
        "to_hash": "b890389f7494e3da...",
        "time_delta_seconds": 0.0127,
        "source_transition": "worm_storage -> worm_storage"
      },
      {
        "from_entry": "demo_entry_2",
        "to_entry": "0c5a7b17-c772-4816-b1a8-460ef1c380ef",
        "from_hash": "b890389f7494e3da...",
        "to_hash": "a32345787a643d7d...",
        "time_delta_seconds": 40.138944,
        "source_transition": "worm_storage -> worm_storage"
      }
    ],
    "diff_map_hash": "8ac61d602cc851d4aa566c4779312bea498288214940acf32788291cc328f749bd2a75c99279d9f05a0a7d26f544de922619fac1e8d1f07561b62707548762eb",
    "tamper_indicators": []
  },
  "timeline_sample": [
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T19:04:04.144021Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": false
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 1,
                "refs_total": 2,
                "score": 12.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 38,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution not implemented - requires subprocess execution",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Pre-commit hook simulation",
                "Pytest structure tests"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 0,
                "evidence_found": [],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 0,
                "status": "FAIL"
              }
            },
            "score": 57,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_guard into CI/test workflows (1/2 refs found)",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "HIGH: No audit evidence found for worm_storage_integrity - verify logging is active",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 27,
            "phase_scores": {
              "audit_proof": 57,
              "dynamic_execution": 0,
              "static_analysis": 38
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "5a3f3b15af92d83c31d9a0cb3fb8ef87fdec92b91e1b3d6110b931316b5760da",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 27,
          "sha512": "31e5091e1827bc6a96a890784823b38975dace0fd9f8a7646d01c9d51a2c86c5296e0edbb24a59d97d0e44554a2390fe04817ab496fac9cfc3f77b7897d4aaa7",
          "timestamp": "2025-10-15T19:04:04.145015Z",
          "uuid": "a75d61ef-1237-4b6f-b574-256ff1545439"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T19:09:44.680936Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 46,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution not implemented - requires subprocess execution",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Pre-commit hook simulation",
                "Pytest structure tests"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 1,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 6,
                "status": "PARTIAL"
              }
            },
            "score": 63,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for worm_storage_integrity - consider increasing logging",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 31,
            "phase_scores": {
              "audit_proof": 63,
              "dynamic_execution": 0,
              "static_analysis": 46
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "eeadb759df03689d051583d234991a8bc9278c5b9e14059e434fc9a64ba5ab12",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 31,
          "sha512": "3363e8d1e2a789f9727dfb290124570e2ff4704fe657c225e90c0d72ff57df50693a55f49cfe423c7fd57934164c02f6248b3f24c2258d870dc392cf757ad135",
          "timestamp": "2025-10-15T19:09:44.680936Z",
          "uuid": "6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T19:10:38.478151Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": true
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 1,
                "refs_total": 2,
                "score": 9.0,
                "tool_exists": true,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 52,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution not implemented - requires subprocess execution",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Pre-commit hook simulation",
                "Pytest structure tests"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 2,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 12,
                "status": "PARTIAL"
              }
            },
            "score": 69,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (1/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for worm_storage_integrity - consider increasing logging",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 35,
            "phase_scores": {
              "audit_proof": 69,
              "dynamic_execution": 0,
              "static_analysis": 52
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "2fcdee7bccd65b02480ec9a4efb6897e5f5ffc6c4eaac5b4951b2145981831f0",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 35,
          "sha512": "4b7a18fb3fc522a6a5061f470c81e29c83f188d1ab893b84f0847ebfb01ab1c6e733e4c918b0ba5e077650e248219f8ad3dcf93743753c391c8726ecfdb0b70d",
          "timestamp": "2025-10-15T19:10:38.478151Z",
          "uuid": "6e6677aa-92e7-429e-bfd4-a771dd3b7e28"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T19:10:50.314921Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": true
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 1,
                "refs_total": 2,
                "score": 9.0,
                "tool_exists": true,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 52,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution not implemented - requires subprocess execution",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Pre-commit hook simulation",
                "Pytest structure tests"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 3,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 18,
                "status": "PARTIAL"
              }
            },
            "score": 75,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (1/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for worm_storage_integrity - consider increasing logging",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 36,
            "phase_scores": {
              "audit_proof": 75,
              "dynamic_execution": 0,
              "static_analysis": 52
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "35f36c85d35c5f2498b9931ed0b41f43d268c63ba4fe37b294699a41d1ec666a",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 36,
          "sha512": "1fcf80779e06351ad4e09241d9faf04f6a2087d3bbea3539df5f9a1a172180f6975d3ac02726073f9c06a64fc941c0fc99b244ea5d689409863c4b3004f0ad9d",
          "timestamp": "2025-10-15T19:10:50.314921Z",
          "uuid": "dd5bcd03-4ed5-4783-90e5-63e4da7d477e"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T19:17:14.499618Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution not implemented - requires subprocess execution",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Pre-commit hook simulation",
                "Pytest structure tests"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 4,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 24,
                "status": "PASS"
              }
            },
            "score": 81,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 35,
            "phase_scores": {
              "audit_proof": 81,
              "dynamic_execution": 0,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "1ef860026cc2654e71e1efa226d5b0c3a47f24588ef62b5a5be0b5493ed00458",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 35,
          "sha512": "b5ec3f62111b397e436c59cfbfac4c787bd53140c1749ad118aa4d14a3a40b7d42d22b1aa2796a4f969032acf37ee7becb529b6e237bdd4fe7ee7a9cc8a27dbf",
          "timestamp": "2025-10-15T19:17:14.499618Z",
          "uuid": "fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T212101026505Z_516d0966-a4d4-492b-8410-a0ad76a6c4bf.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T21:21:01.026505Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution disabled (use --execute to enable)",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Self-verification (dry run)",
                "Pre-commit hook simulation"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 5,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 30,
                "status": "PASS"
              }
            },
            "score": 87,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 36,
            "phase_scores": {
              "audit_proof": 87,
              "dynamic_execution": 0,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "0b0ecf732c3a2cf8ecc751b491f0adddaf806a510f3c0cbb4da5777651de34b3",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 36,
          "sha512": "31ede386e6b1a92a41318d436f0ff3e8a586ef434f4f3b81918dbd6aba2eaf21aca6ea2fe8f921e5d6eae630fa4cec545d411f45dec1d9f62db478db87346224",
          "timestamp": "2025-10-15T21:21:01.026505Z",
          "uuid": "516d0966-a4d4-492b-8410-a0ad76a6c4bf"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T212103707440Z_278ddd4d-07ef-451d-affe-96d68b8f02c6.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T21:21:03.706469Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "max_score": 40,
              "note": "Dynamic execution with subprocess tool invocation",
              "runs": [
                {
                  "cmd": "bash 12_tooling/scripts/structure_guard.sh",
                  "duration_s": 0.58,
                  "label": "structure_guard",
                  "rc": 0,
                  "stderr_sample": "",
                  "stdout_sample": "âœ… structure_guard PASS\n",
                  "success": true
                },
                {
                  "cmd": "opa eval -i repo_state.json -d 23_compliance/policies --fail-defined -f pretty data",
                  "duration_s": 4.76,
                  "label": "opa_eval",
                  "rc": 2,
                  "stderr_sample": "ego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\rat_test.rego:176: rego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\region_activation_guard.rego:234: rego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\region_activation_guard.rego:234: rego_parse_error: `contains` keyword is required for partial set rules\n23_compliance\\policies\\region_activation_guard.rego:242: rego_parse_error: `if` keyword is req",
                  "stdout_sample": "",
                  "success": false
                },
                {
                  "cmd": "C:\\Users\\bibel\\AppData\\Local\\Programs\\Python\\Python312\\python.exe 02_audit_logging/tools/verify_sot_enforcement_v2.py --ci-mode",
                  "duration_s": 0.0,
                  "label": "self_verify",
                  "rc": 127,
                  "stderr_sample": "[WinError 2] Das System kann die angegebene Datei nicht finden",
                  "stdout_sample": "",
                  "success": false
                },
                {
                  "cmd": "pre-commit run --all-files --config 12_tooling/hooks/pre_commit/config.yaml",
                  "duration_s": 8.77,
                  "label": "pre_commit",
                  "rc": 1,
                  "stderr_sample": "",
                  "stdout_sample": "SSID Structure Validation (Root-24-LOCK).................................Failed\n- hook id: ssid-structure-validation\n- exit code: 24\n- files were modified by this hook\n\nVIOLATION: Unauthorized root-level item 'repo_state.json'\n\nSSID Structure Guard (Exit 24 on violation)..............................Failed\n- hook id: ssid-structure-guard\n- exit code: 24\n- files were modified by this hook\n\nVIOLATION: Unauthorized root-level item 'repo_state.json'\n\nSSID SoT Functional Enforcement (Level 4)........",
                  "success": true
                }
              ],
              "score_phase2": 20
            },
            "score": 50,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 5,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 30,
                "status": "PASS"
              }
            },
            "score": 87,
            "weight": "25%"
          },
          "recommendations": [
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging"
          ],
          "summary": {
            "certification_level": "BRONZE",
            "certification_status": "BRONZE_ENFORCEMENT",
            "overall_score": 56,
            "phase_scores": {
              "audit_proof": 87,
              "dynamic_execution": 50,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "d21f84c29a94c62fae36f02234d9ae2bc7a340e78f3506e9a28b765c8fe0c83c",
          "certification_level": "BRONZE",
          "certification_status": "BRONZE_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 56,
          "sha512": "6b1c05e30b72793a6d95c76e123af42b31a281eca7ad8aaacdc521b0efba403d5e7c72b1bec41a9ebab428afb824219ce6b0b7c0bb2eba1686b3a8a96b28813f",
          "timestamp": "2025-10-15T21:21:03.707440Z",
          "uuid": "278ddd4d-07ef-451d-affe-96d68b8f02c6"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T212200040088Z_1126720e-0bac-47cb-b5cb-29eea96747ca.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T21:22:00.040088Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution disabled (use --execute to enable)",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Self-verification (dry run)",
                "Pre-commit hook simulation"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 5,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 30,
                "status": "PASS"
              }
            },
            "score": 87,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 36,
            "phase_scores": {
              "audit_proof": 87,
              "dynamic_execution": 0,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "d3fc5b144ed8be5abd7cc88958fb83887b1ecb97d5aff9a437653cc4652f165d",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 36,
          "sha512": "9627f42ed72e9cabb901079fdb0e1ecd87941923e2352e8d7352c67e198a18869308d47571af0e8f0a8a5d3fea310fe47e982eeea12282c77cdf18cd64a67812",
          "timestamp": "2025-10-15T21:22:00.040088Z",
          "uuid": "1126720e-0bac-47cb-b5cb-29eea96747ca"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T212202735827Z_1d61a4d3-01ea-4120-b1d3-71f9c5cae403.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T21:22:02.735827Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "max_score": 40,
              "note": "Dynamic execution with subprocess tool invocation",
              "runs": [
                {
                  "cmd": "bash 12_tooling/scripts/structure_guard.sh",
                  "duration_s": 0.45,
                  "label": "structure_guard",
                  "rc": 0,
                  "stderr_sample": "",
                  "stdout_sample": "âœ… structure_guard PASS\n",
                  "success": true
                },
                {
                  "cmd": "opa eval -i repo_state.json -d 23_compliance/policies -f pretty data.ssid",
                  "duration_s": 0.17,
                  "label": "opa_eval",
                  "rc": 2,
                  "stderr_sample": "ego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\rat_test.rego:176: rego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\region_activation_guard.rego:234: rego_parse_error: `if` keyword is required before rule body\n23_compliance\\policies\\region_activation_guard.rego:234: rego_parse_error: `contains` keyword is required for partial set rules\n23_compliance\\policies\\region_activation_guard.rego:242: rego_parse_error: `if` keyword is req",
                  "stdout_sample": "",
                  "success": false
                },
                {
                  "cmd": "python 02_audit_logging/tools/verify_sot_enforcement_v2.py --ci-mode",
                  "duration_s": 0.25,
                  "label": "self_verify",
                  "rc": 2,
                  "stderr_sample": "C:\\Users\\bibel\\Documents\\Github\\SSID\\02_audit_logging\\tools\\verify_sot_enforcement_v2.py:664: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  \"generated_at\": datetime.datetime.utcnow().isoformat() + \"Z\",\n",
                  "stdout_sample": "SoT Enforcement:36/100 <!-- SCORE_REF:reports/integrated_evidence_trail_platinum_line5077_36of100.score.json -->(NONE)\n",
                  "success": true
                },
                {
                  "cmd": "pre-commit run --all-files --config 12_tooling/hooks/pre_commit/config.yaml",
                  "duration_s": 7.67,
                  "label": "pre_commit",
                  "rc": 1,
                  "stderr_sample": "",
                  "stdout_sample": "SSID Structure Validation (Root-24-LOCK).................................Failed\n- hook id: ssid-structure-validation\n- exit code: 24\n- files were modified by this hook\n\nVIOLATION: Unauthorized root-level item 'repo_state.json'\n\nSSID Structure Guard (Exit 24 on violation)..............................Failed\n- hook id: ssid-structure-guard\n- exit code: 24\n- files were modified by this hook\n\nVIOLATION: Unauthorized root-level item 'repo_state.json'\n\nSSID SoT Functional Enforcement (Level 4)........",
                  "success": true
                }
              ],
              "score_phase2": 30
            },
            "score": 75,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 5,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 30,
                "status": "PASS"
              }
            },
            "score": 87,
            "weight": "25%"
          },
          "recommendations": [
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging"
          ],
          "summary": {
            "certification_level": "BRONZE",
            "certification_status": "BRONZE_ENFORCEMENT",
            "overall_score": 66,
            "phase_scores": {
              "audit_proof": 87,
              "dynamic_execution": 75,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "4fabaccda872d41115c4c872edfffae1f4d699303284a42c9ef9e522a62941d8",
          "certification_level": "BRONZE",
          "certification_status": "BRONZE_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 66,
          "sha512": "0882f5ad771486f468a4dae4a07e13d4b91d99bc60e45e28a7872a154b5d916146abf195698ea6b7816a92570958507348e066f869f073564da96cc9dc302a59",
          "timestamp": "2025-10-15T21:22:02.735827Z",
          "uuid": "1d61a4d3-01ea-4120-b1d3-71f9c5cae403"
        }
      }
    },
    {
      "source": "worm_storage",
      "timestamp": "",
      "entry_id": null,
      "content_hash": null,
      "file_path": "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T212240778971Z_3a5d47cd-7797-4628-86db-330f5c6f88b5.json",
      "data": {
        "result": {
          "metadata": {
            "generated_at": "2025-10-15T21:22:40.777931Z",
            "purpose": "SoT Functional Enforcement Verification (Level 3 → Level 4)",
            "report_version": "2.0.0",
            "tool": "verify_sot_enforcement_v2.py"
          },
          "phase1_static_analysis": {
            "description": "CI/Test/Hook file reference verification",
            "results": {
              "pre_commit_hooks": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/pre-commit.yml": false
                },
                "description": "Pre-commit structure validation hooks",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 2,
                "score": 0,
                "tool_exists": false,
                "tool_path": ".pre-commit-config.yaml"
              },
              "pytest_structure_tests": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_pytest_compliance.yml": false,
                  "pytest.ini": false
                },
                "description": "Pytest structure policy unit tests",
                "max_score": 10,
                "refs_found": 1,
                "refs_total": 3,
                "score": 4.7,
                "tool_exists": true,
                "tool_path": "23_compliance\\tests\\unit\\test_structure_policy_vs_md.py"
              },
              "root_exceptions": {
                "ci_references": {
                  "12_tooling/scripts/structure_guard.sh": true,
                  "24_meta_orchestration/triggers/ci/gates/structure_lock_l3.py": true
                },
                "description": "Root-level exceptions registry",
                "max_score": 10,
                "refs_found": 2,
                "refs_total": 2,
                "score": 10.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\exceptions\\root_level_exceptions.yaml"
              },
              "structure_guard": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": true,
                  ".github/workflows/ci_structure_guard.yml": true
                },
                "description": "Root-24-LOCK structure validator",
                "max_score": 20,
                "refs_found": 2,
                "refs_total": 2,
                "score": 20.0,
                "tool_exists": true,
                "tool_path": "12_tooling\\scripts\\structure_guard.sh"
              },
              "structure_lock_gate": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_structure_guard.yml": false,
                  ".pre-commit-config.yaml": false
                },
                "description": "Structure lock CI gate (exit 24 on violation)",
                "max_score": 20,
                "refs_found": 0,
                "refs_total": 3,
                "score": 4.0,
                "tool_exists": true,
                "tool_path": "24_meta_orchestration\\triggers\\ci\\gates\\structure_lock_l3.py"
              },
              "structure_policy_opa": {
                "ci_references": {
                  ".github/workflows/ci_enforcement_gate.yml": false,
                  ".github/workflows/ci_opa_structure.yml": false,
                  "23_compliance/tests/integration/test_opa_structure.py": false
                },
                "description": "OPA-based structure policy enforcement",
                "max_score": 15,
                "refs_found": 0,
                "refs_total": 3,
                "score": 3.0,
                "tool_exists": true,
                "tool_path": "23_compliance\\policies\\structure_policy.yaml"
              },
              "worm_audit_logging": {
                "ci_references": {
                  "02_audit_logging/evidence_trails/integrated_audit_trail.py": false,
                  "11_test_simulation/tests/unit/test_registry_logic.py": false
                },
                "description": "WORM immutable audit logging",
                "max_score": 10,
                "refs_found": 0,
                "refs_total": 2,
                "score": 2.0,
                "tool_exists": true,
                "tool_path": "02_audit_logging\\worm_storage\\worm_storage_engine.py"
              }
            },
            "score": 43,
            "weight": "35%"
          },
          "phase2_dynamic_execution": {
            "description": "Tool execution and exit code verification",
            "results": {
              "note": "Dynamic execution disabled (use --execute to enable)",
              "planned_checks": [
                "structure_guard.sh execution",
                "OPA policy evaluation",
                "Self-verification (dry run)",
                "Pre-commit hook simulation"
              ]
            },
            "score": 0,
            "weight": "40%"
          },
          "phase3_audit_proof": {
            "description": "WORM log and evidence trail verification",
            "results": {
              "anti_gaming_logs": {
                "evidence_count": 11,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_anomaly_rate.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_badge_integrity.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_circular_deps.jsonl",
                    "pattern": "circular.*dep"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_dependency_graph.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_duplicate_hashes.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_overfitting.jsonl",
                    "pattern": "overfitting"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_replay.jsonl",
                    "pattern": "anti_gaming"
                  },
                  {
                    "file": "02_audit_logging\\logs\\anti_gaming_time_skew.jsonl",
                    "pattern": "anti_gaming"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\logs"
                ],
                "patterns_required": 3,
                "score": 13.2,
                "status": "PARTIAL"
              },
              "evidence_trails": {
                "evidence_count": 12,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\logs\\backup_purge_summary.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\logs\\test_inventory_audit.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\continuum_proof_chain_v10.json",
                    "pattern": "enforcement"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\meta_interfederation_proof_chain.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\deps\\dependency_graph.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\canonical_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "structure.*validation"
                  },
                  {
                    "file": "02_audit_logging\\evidence\\import_resolution\\resolved_edges_20251014_111202.json",
                    "pattern": "compliance.*check"
                  }
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\logs",
                  "02_audit_logging\\evidence"
                ],
                "patterns_required": 3,
                "score": 24,
                "status": "PASS"
              },
              "hygiene_certificate": {
                "evidence_count": 6,
                "evidence_found": [
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                    "pattern": "score.*100"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "CERTIFIED"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "LOCK"
                  },
                  {
                    "file": "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml",
                    "pattern": "score.*100"
                  }
                ],
                "max_score": 20,
                "paths_checked": [
                  "02_audit_logging\\reports\\test_hygiene_certificate_v1.md",
                  "24_meta_orchestration\\registry\\test_hygiene_certificate.yaml"
                ],
                "patterns_required": 3,
                "score": 19.8,
                "status": "PASS"
              },
              "worm_storage_integrity": {
                "evidence_count": 5,
                "evidence_found": [
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190404145015Z_a75d61ef-1237-4b6f-b574-256ff1545439.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T190944680936Z_6f7fb1de-da4c-4af8-9ad8-52dbbc564fc5.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191038478151Z_6e6677aa-92e7-429e-bfd4-a771dd3b7e28.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191050314921Z_dd5bcd03-4ed5-4783-90e5-63e4da7d477e.json",
                  "02_audit_logging\\storage\\worm\\immutable_store\\sot_enforcement_v2_20251015T191714499618Z_fbfaebe9-7d9b-42ac-a8c3-cc24f56c58c9.json"
                ],
                "max_score": 30,
                "paths_checked": [
                  "02_audit_logging\\worm_storage\\immutable_store",
                  "02_audit_logging\\storage\\worm"
                ],
                "patterns_required": 4,
                "score": 30,
                "status": "PASS"
              }
            },
            "score": 87,
            "weight": "25%"
          },
          "recommendations": [
            "CRITICAL: Overall enforcement score below 50% - immediate remediation required",
            "HIGH: Integrate structure_policy_opa into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate structure_lock_gate into CI/test workflows (0/3 refs found)",
            "HIGH: Integrate pre_commit_hooks into CI/test workflows (0/2 refs found)",
            "HIGH: Integrate pytest_structure_tests into CI/test workflows (1/3 refs found)",
            "HIGH: Integrate worm_audit_logging into CI/test workflows (0/2 refs found)",
            "MEDIUM: Limited audit evidence for anti_gaming_logs - consider increasing logging",
            "MEDIUM: Dynamic execution phase not implemented - consider adding tool execution verification"
          ],
          "summary": {
            "certification_level": "NONE",
            "certification_status": "INSUFFICIENT_ENFORCEMENT",
            "overall_score": 36,
            "phase_scores": {
              "audit_proof": 87,
              "dynamic_execution": 0,
              "static_analysis": 43
            }
          }
        },
        "worm_signature": {
          "algorithm": "Dilithium2(placeholder)-HMAC-SHA256",
          "blake2b": "2cea258f19f6549cc391decc8a6b9bdec4b3fb172ac9bbd7d2007ea05e7da313",
          "certification_level": "NONE",
          "certification_status": "INSUFFICIENT_ENFORCEMENT",
          "kind": "sot_enforcement_verification_v2",
          "overall_score": 36,
          "sha512": "742e75831b3546b601a7757477b3c2b83f1f4c4326ab9bfa68fdda320c53578f795b3654608cadc8a6342501320144226728b3c851ec458afa328d78dce2e302",
          "timestamp": "2025-10-15T21:22:40.778971Z",
          "uuid": "3a5d47cd-7797-4628-86db-330f5c6f88b5"
        }
      }
    }
  ],
  "continuous_integration": {
    "status": "FIRST_RUN",
    "previous_runs_found": 0,
    "previous_runs": [],
    "continuity_hash": "cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce",
    "continuous_evidence_score": 0.0
  },
  "platinum_readiness": {
    "evidence_density": "HIGH",
    "source_coverage": "COMPLETE",
    "temporal_consistency": "WARNING",
    "chain_integrity": "VERIFIED",
    "continuous_integration": "FIRST_RUN"
  }
}