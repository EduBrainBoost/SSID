{
  "sot_1to1_violation_report": {
    "timestamp": "2025-10-17T20:00:00.000000Z",
    "version": "1.0.0",
    "audit_method": "Deep Structure Analysis - NOT String Counting",
    "principle": "1 Rule = 1 Scientific Foundation + 5 Technical Manifestations",
    "total_rules_expected": 69,

    "manifestation_status": {
      "1_python_validators": {
        "file": "03_core/validators/sot/sot_validator_core.py",
        "method": "Dynamic import of ALL_VALIDATORS dictionary",
        "rules_implemented": 69,
        "rules_expected": 69,
        "individual_functions": true,
        "status": "COMPLIANT",
        "completeness": "100%",
        "notes": "Each rule has dedicated validator function in ALL_VALIDATORS"
      },

      "2_rego_policy": {
        "file": "23_compliance/policies/sot/sot_policy.rego",
        "method": "Individual deny/warn/info blocks per rule",
        "rules_implemented": 69,
        "rules_expected": 69,
        "individual_policies": true,
        "status": "COMPLIANT",
        "completeness": "100%",
        "notes": "Each rule has dedicated OPA policy block with MoSCoW enforcement"
      },

      "3_yaml_contract": {
        "file": "16_codex/contracts/sot/sot_contract.yaml",
        "method": "YAML rule entries under 'rules:' list",
        "rules_implemented": 33,
        "rules_expected": 69,
        "individual_entries": true,
        "status": "VIOLATION",
        "completeness": "48%",
        "missing_rules": 36,
        "missing_categories": {
          "instance_properties": {
            "missing_range": "SOT-022 to SOT-058",
            "missing_count": 37,
            "description": "Framework instance properties (name, path, deprecated, business_priority) for all 7 frameworks"
          },
          "deprecated_list": {
            "missing_range": "SOT-059 to SOT-066",
            "missing_count": 8,
            "description": "Deprecated frameworks list validation rules"
          }
        },
        "present_categories": {
          "global_foundations": ["SOT-001", "SOT-002", "SOT-003", "SOT-004", "SOT-005"],
          "yaml_markers": ["SOT-018", "SOT-019"],
          "hierarchy_markers": ["SOT-020", "SOT-031", "SOT-037", "SOT-043"],
          "entry_markers": ["SOT-021", "SOT-026", "SOT-032", "SOT-038", "SOT-044", "SOT-049", "SOT-054"],
          "eu_regulatorik": ["SOT-067", "SOT-068", "SOT-069", "SOT-070", "SOT-071", "SOT-072", "SOT-073", "SOT-074", "SOT-075", "SOT-076", "SOT-077", "SOT-078", "SOT-079", "SOT-080", "SOT-081"]
        },
        "notes": "CRITICAL: 36 rules completely missing from YAML contract. Previous verification reports incorrectly counted string occurrences instead of actual YAML entries."
      },

      "4_cli_command": {
        "file": "12_tooling/cli/sot_validator.py",
        "method": "Dynamic import from ALL_VALIDATORS",
        "rules_implemented": 69,
        "rules_expected": 69,
        "access_pattern": "Dynamic via ALL_VALIDATORS dictionary",
        "status": "COMPLIANT",
        "completeness": "100%",
        "notes": "CLI correctly imports ALL_VALIDATORS - all 69 rules accessible via --rule flag"
      },

      "5_pytest_tests": {
        "file": "11_test_simulation/tests_compliance/test_sot_validator.py",
        "method": "Parametrized testing with ALL_RULE_IDS",
        "rules_implemented": 69,
        "rules_expected": 69,
        "test_pattern": "@pytest.mark.parametrize('rule_id', ALL_RULE_IDS)",
        "status": "COMPLIANT",
        "completeness": "100%",
        "notes": "Tests use parametrization to cover all 69 rules via ALL_VALIDATORS.keys()"
      }
    },

    "overall_assessment": {
      "manifestations_compliant": 4,
      "manifestations_violated": 1,
      "total_manifestations": 5,
      "compliance_rate": "80%",
      "status": "VIOLATION - YAML Contract Incomplete",
      "critical_finding": "YAML Contract is missing 36 of 69 rules (52% missing)",
      "impact": "System cannot claim 1:1:1:1:1 manifestation principle compliance",
      "risk_level": "HIGH"
    },

    "violation_details": {
      "principle_violated": "1 Rule = 1 Scientific Foundation + 5 Technical Manifestations",
      "specific_violation": "36 rules lack YAML contract entries with scientific foundations",
      "missing_artifacts": 36,
      "expected_artifacts": 345,
      "present_artifacts": 309,
      "artifact_completeness": "89.6%",
      "note": "While 89.6% may seem high, the YAML contract is the SOURCE OF TRUTH for scientific foundations. Without it, the other 4 manifestations lack scientific justification."
    },

    "impact_analysis": {
      "auditability": "DEGRADED - No scientific foundation documented for 36 rules",
      "traceability": "BROKEN - Cannot trace instance property rules back to regulatory source",
      "reproducibility": "DEGRADED - Missing contract entries prevent deterministic regeneration",
      "compliance_evidence": "INCOMPLETE - Cannot prove regulatory basis for 36 rules",
      "moscow_enforcement": "PARTIAL - Priority model defined for only 33/69 rules in contract"
    },

    "remediation_required": {
      "action": "Add 36 missing rules to YAML contract",
      "priority": "CRITICAL",
      "estimated_effort": "2-4 hours",
      "approach": "Use sot_validator_generator_v2_append_only.py to generate missing entries",
      "validation": "Re-run 1:1 manifestation audit after addition",
      "deadline": "Immediate - blocks FULL SOT MATERIALIZATION badge"
    },

    "previous_report_error": {
      "report_file": "SOT_VERIFICATION_100_PERCENT.json",
      "claimed_status": "100% COMPLETE",
      "actual_status": "80% COMPLETE (4/5 manifestations)",
      "error_type": "String counting instead of structure analysis",
      "lesson": "Always verify actual data structures, not string occurrences"
    },

    "certification_status": {
      "badge": "FULL SOT EXPANSION",
      "current_validity": "REVOKED",
      "reason": "YAML contract violation discovered",
      "reinstatement_criteria": "All 69 rules must have YAML contract entries",
      "revocation_date": "2025-10-17T20:00:00Z"
    }
  }
}
