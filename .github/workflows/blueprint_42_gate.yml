name: blueprint_42_gate

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  gate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml pytest web3==6.19.0

      - name: Fill checksums for 4.2 manifests
        run: |
          python - <<'PY'
          import yaml
          import hashlib
          import os

          files = [
            "24_meta_orchestration/registry/manifests/blueprint_4_2_manifest.yaml",
            "23_compliance/governance/blueprint_4_2_rfc.yaml"
          ]

          for f in files:
            if not os.path.exists(f):
              print(f"Warning: {f} not found, skipping...")
              continue

            with open(f, "rb") as fh:
              raw = fh.read()

            y = yaml.safe_load(raw.decode("utf-8"))

            # Calculate checksum of original file content
            checksum = "sha256:" + hashlib.sha256(raw).hexdigest()
            y["checksum"] = checksum

            with open(f, "w", encoding="utf-8") as out:
              out.write(yaml.safe_dump(y, sort_keys=False, allow_unicode=True))

            print(f"✓ Updated checksum for {f}")
          PY

      - name: Configure on-chain environment
        run: |
          if [ -n "${{ secrets.MUMBAI_RPC_URL }}" ] && [ -n "${{ secrets.MUMBAI_PRIVATE_KEY }}" ] && [ -n "${{ secrets.COMPLIANCE_VERIFIER_ADDR }}" ]; then
            echo "MUMBAI_RPC_URL=${{ secrets.MUMBAI_RPC_URL }}" >> $GITHUB_ENV
            echo "MUMBAI_PRIVATE_KEY=${{ secrets.MUMBAI_PRIVATE_KEY }}" >> $GITHUB_ENV
            echo "COMPLIANCE_VERIFIER_ADDR=${{ secrets.COMPLIANCE_VERIFIER_ADDR }}" >> $GITHUB_ENV
            echo "DRY_RUN=0" >> $GITHUB_ENV
            echo "✓ Blockchain secrets configured (LIVE mode)"
          else
            echo "DRY_RUN=1" >> $GITHUB_ENV
            echo "ℹ️  No blockchain secrets, using DRY_RUN mode"
          fi

      - name: Run Blueprint 4.2 Compatibility Gate (+ On-chain Proof)
        run: python 24_meta_orchestration/triggers/blueprint_compat_gate.py

      - name: Run pytest compatibility tests
        run: |
          if [ -d "11_test_simulation/blueprint_42" ]; then
            pytest 11_test_simulation/blueprint_42/test_blueprint_42_compat.py -v
          else
            echo "Test directory not yet created, skipping pytest"
          fi

      - name: Generate gate report
        if: always()
        run: |
          echo "Blueprint 4.2 Gate Report" > gate_report.txt
          echo "=========================" >> gate_report.txt
          echo "Date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> gate_report.txt
          echo "Commit: ${{ github.sha }}" >> gate_report.txt
          echo "Status: ${{ job.status }}" >> gate_report.txt

      - name: Upload gate report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blueprint-42-gate-report
          path: gate_report.txt
          retention-days: 30
