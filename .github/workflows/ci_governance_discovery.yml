name: CI Governance Discovery v6.0

on:
  push:
    branches: [main, develop]
    paths:
      - '**/chart.yaml'
      - '**/manifest.yaml'
      - '05_documentation/schemas/**'
      - '12_tooling/governance/**'
      - '.github/workflows/ci_governance_discovery.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - '**/chart.yaml'
      - '**/manifest.yaml'
      - '05_documentation/schemas/**'
      - '12_tooling/governance/**'
  workflow_dispatch:

jobs:
  schema-lint:
    name: JSON Schema Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install jsonschema pyyaml

      - name: Validate JSON schemas
        run: |
          python -c "import json; json.load(open('05_documentation/schemas/chart.schema.json'))"
          python -c "import json; json.load(open('05_documentation/schemas/manifest.schema.json'))"
          echo "[OK] JSON schemas are valid"

  governance-validate:
    name: Validate Governance Files
    runs-on: ubuntu-latest
    needs: schema-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install jsonschema pyyaml

      - name: Run governance validator
        run: |
          python 12_tooling/governance/validate_governance_files.py \
            --output 02_audit_logging/reports/governance_validation_v6_0.json

      - name: Upload validation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: governance-validation-report
          path: 02_audit_logging/reports/governance_validation_v6_0.json
          retention-days: 30

  governance-map:
    name: Generate Governance Map
    runs-on: ubuntu-latest
    needs: governance-validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml

      - name: Extract governance map
        run: |
          python 12_tooling/governance/extract_map.py

      - name: Upload governance map
        uses: actions/upload-artifact@v4
        with:
          name: governance-map
          path: |
            02_audit_logging/reports/root_24_governance_map_v6_0.json
            02_audit_logging/reports/root_24_governance_analysis_v6_0.md
          retention-days: 90

      - name: Display summary
        run: |
          echo "=== Governance Discovery Summary ==="
          cat 02_audit_logging/reports/root_24_governance_analysis_v6_0.md | head -30

  summary:
    name: Phase 1 Complete
    runs-on: ubuntu-latest
    needs: [schema-lint, governance-validate, governance-map]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Phase 1 completion message
        run: |
          echo "============================================"
          echo "   PHASE 1: DISCOVERY & ANALYSE COMPLETE   "
          echo "============================================"
          echo ""
          echo "Results:"
          echo "  - 48/48 Governance files validated"
          echo "  - JSON schemas created and validated"
          echo "  - Governance map extracted"
          echo "  - Analysis report generated"
          echo ""
          echo "Next Steps: Phase 2 - Pilot Implementation"
          echo ""
          echo "Ready for operational proof activation."
          echo "============================================"
