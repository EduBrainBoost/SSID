name: Fake Integrity Guard - Meta-Auditor

on:
  schedule:
    # Run every 2 weeks (bi-weekly) on Monday at 03:00 UTC
    - cron: '0 3 */14 * *'
  push:
    branches: [main, develop]
    paths:
      - '02_audit_logging/**'
      - '23_compliance/**'
      - '24_meta_orchestration/**'
      - '.github/workflows/fake_integrity_guard.yml'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      strict_mode:
        description: 'Enable strict mode (CI-fail on violations)'
        required: false
        default: 'true'

jobs:
  meta-audit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Run Fake Integrity Guard
        id: integrity_guard
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.strict_mode }}" == "true" ]; then
              python 02_audit_logging/forensics/fake_integrity_guard.py --strict
            else
              python 02_audit_logging/forensics/fake_integrity_guard.py
            fi
          else
            # Always strict on push/PR
            python 02_audit_logging/forensics/fake_integrity_guard.py --strict
          fi
        continue-on-error: true

      - name: Read Analysis Results
        id: results
        run: |
          # Find the most recent analysis file
          LATEST_ANALYSIS=$(ls -t 02_audit_logging/worm_storage/fake_integrity/fake_integrity_analysis_*.json 2>/dev/null | head -1)

          if [ -f "$LATEST_ANALYSIS" ]; then
            echo "analysis_file=$LATEST_ANALYSIS" >> $GITHUB_OUTPUT

            # Extract key metrics
            CRITICAL=$(python -c "import json; data=json.load(open('$LATEST_ANALYSIS')); print(data['summary']['critical_violations'])")
            SUSPICION=$(python -c "import json; data=json.load(open('$LATEST_ANALYSIS')); print(data['summary']['suspicion_level'])")
            TOTAL=$(python -c "import json; data=json.load(open('$LATEST_ANALYSIS')); print(data['summary']['total_anomalies'])")

            echo "critical_violations=$CRITICAL" >> $GITHUB_OUTPUT
            echo "suspicion_level=$SUSPICION" >> $GITHUB_OUTPUT
            echo "total_anomalies=$TOTAL" >> $GITHUB_OUTPUT
          else
            echo "No analysis file found"
            exit 1
          fi

      - name: Check Integrity Status
        if: steps.results.outputs.critical_violations != '0'
        run: |
          echo "::error::Critical integrity violations detected: ${{ steps.results.outputs.critical_violations }}"
          echo "Suspicion Level: ${{ steps.results.outputs.suspicion_level }}"
          echo "Total Anomalies: ${{ steps.results.outputs.total_anomalies }}"
          exit 1

      - name: Commit WORM Archive
        if: always()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Add WORM storage and registry
          git add 02_audit_logging/worm_storage/fake_integrity/
          git add 02_audit_logging/forensics/fake_integrity_registry.yaml

          # Commit if changes exist
          if ! git diff --cached --quiet; then
            git commit -m "$(cat <<'EOF'
          audit: Fake Integrity Guard analysis - $(date -u +%Y-%m-%d)

          Meta-auditor execution results:
          - Critical Violations: ${{ steps.results.outputs.critical_violations }}
          - Suspicion Level: ${{ steps.results.outputs.suspicion_level }}
          - Total Anomalies: ${{ steps.results.outputs.total_anomalies }}

          WORM archived to immutable storage.

          🤖 Generated with [Claude Code](https://claude.com/claude-code)

          Co-Authored-By: Claude <noreply@anthropic.com>
          EOF
          )"

            git push
          else
            echo "No changes to commit"
          fi

      - name: Create Issue on Violations
        if: failure() && steps.results.outputs.critical_violations != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const criticalViolations = '${{ steps.results.outputs.critical_violations }}';
            const suspicionLevel = '${{ steps.results.outputs.suspicion_level }}';
            const totalAnomalies = '${{ steps.results.outputs.total_anomalies }}';

            const issueBody = `## 🚨 Fake Integrity Guard Alert

            The meta-auditor has detected critical integrity violations in the audit system.

            ### Metrics
            - **Critical Violations:** ${criticalViolations}
            - **Suspicion Level:** ${suspicionLevel}
            - **Total Anomalies:** ${totalAnomalies}

            ### Analysis Details
            - **WORM Archive:** \`${{ steps.results.outputs.analysis_file }}\`
            - **Timestamp:** ${new Date().toISOString()}
            - **Trigger:** ${{ github.event_name }}

            ### Immediate Actions Required

            1. Review the WORM-archived analysis file
            2. Investigate flagged anomalies
            3. Verify that violations are genuine (not false positives)
            4. Remediate critical issues before next release

            ### Potential Issues

            Based on the meta-auditor detection patterns:
            - **Root Breaks:** Unauthorized root-level structures
            - **Score Manipulation:** Claims without test logs
            - **Hash Collisions:** Suspicious code duplication
            - **Policy Issues:** Blind guards or trivial allows
            - **Artifact Corruption:** WORM storage integrity issues

            ### Registry

            Check the verdict registry for historical context:
            \`\`\`
            02_audit_logging/forensics/fake_integrity_registry.yaml
            \`\`\`

            ---

            **Note:** This issue was automatically created by the Fake Integrity Guard meta-auditor.

            🤖 Generated with [Claude Code](https://claude.com/claude-code)
            `;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Fake Integrity Guard: ${criticalViolations} Critical Violations Detected`,
              body: issueBody,
              labels: ['security', 'integrity-violation', 'meta-audit', 'priority-high']
            });

      - name: Update Job Summary
        if: always()
        run: |
          echo "## Fake Integrity Guard - Meta-Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +%Y-%m-%d\ %H:%M:%S) UTC" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -n "${{ steps.results.outputs.critical_violations }}" ]; then
            echo "### Metrics" >> $GITHUB_STEP_SUMMARY
            echo "- **Critical Violations:** ${{ steps.results.outputs.critical_violations }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Suspicion Level:** ${{ steps.results.outputs.suspicion_level }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Anomalies:** ${{ steps.results.outputs.total_anomalies }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ "${{ steps.results.outputs.critical_violations }}" != "0" ]; then
              echo "### ⚠️ Status: VIOLATIONS DETECTED" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Critical integrity violations require immediate investigation." >> $GITHUB_STEP_SUMMARY
            else
              echo "### ✅ Status: PASSED" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "No critical violations detected. System integrity validated." >> $GITHUB_STEP_SUMMARY
            fi

            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Archive" >> $GITHUB_STEP_SUMMARY
            echo "- **WORM Storage:** \`${{ steps.results.outputs.analysis_file }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Registry:** \`02_audit_logging/forensics/fake_integrity_registry.yaml\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "Analysis failed to complete. Check logs for details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Cleanup Old WORM Archives
        if: always()
        run: |
          # Keep only last 52 analyses (1 year at bi-weekly rate)
          WORM_DIR="02_audit_logging/worm_storage/fake_integrity"
          if [ -d "$WORM_DIR" ]; then
            FILE_COUNT=$(ls -1 $WORM_DIR/*.json 2>/dev/null | wc -l)
            if [ "$FILE_COUNT" -gt 52 ]; then
              echo "Cleaning up old WORM archives (keeping last 52)..."
              ls -t $WORM_DIR/*.json | tail -n +53 | xargs rm -f
            fi
          fi
