name: Quality Suite - Phase 2 Tooling

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  placeholder-scan:
    name: Placeholder Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Run placeholder scanner (dry-run)
        run: |
          python 23_compliance/anti_gaming/placeholder_removal_tool.py --dry-run
        continue-on-error: true

      - name: Upload placeholder report
        uses: actions/upload-artifact@v3
        with:
          name: placeholder-report
          path: 02_audit_logging/reports/placeholder_violations_*.json
          if-no-files-found: ignore

  sot-mapper:
    name: SoT Requirement Mapping
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Run SoT requirement mapper
        run: |
          python 24_meta_orchestration/registry/tools/sot_requirement_mapper.py

      - name: Upload SoT artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sot-mapping-artifacts
          path: |
            24_meta_orchestration/registry/manifests/sot_requirement_mapping.yaml
            02_audit_logging/scores/sot_requirement_score.json
            02_audit_logging/reports/sot_requirement_report.md
          if-no-files-found: warn

  coverage-booster:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run coverage booster
        run: |
          python 12_tooling/quality/test_coverage_booster.py --emit-json --run-pytest

      - name: Upload coverage advice
        uses: actions/upload-artifact@v3
        with:
          name: coverage-advice
          path: 02_audit_logging/reports/coverage_advice_*.json
          if-no-files-found: warn

  unit-tests:
    name: Phase 2 Tool Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pyyaml

      - name: Run tool unit tests
        run: |
          pytest 11_test_simulation/tools/ -v --tb=short
        continue-on-error: true

  summary:
    name: Quality Suite Summary
    runs-on: ubuntu-latest
    needs: [placeholder-scan, sot-mapper, coverage-booster, unit-tests]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Generate summary
        run: |
          echo "## Quality Suite Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Status" >> $GITHUB_STEP_SUMMARY
          echo "- Placeholder Scan: ${{ needs.placeholder-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- SoT Mapper: ${{ needs.sot-mapper.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage Booster: ${{ needs.coverage-booster.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "All reports and scores have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
