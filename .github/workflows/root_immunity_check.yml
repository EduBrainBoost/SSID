name: ROOT-IMMUNITY ENGINE - Hard Gate

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  root-immunity-gate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Load Registry and Exception Policy
        id: load_config
        run: |
          echo "Loading ROOT-24-LOCK configuration..."
          echo "registry_path=24_meta_orchestration/registry/root_structure_manifest.yaml" >> $GITHUB_OUTPUT
          echo "exception_path=24_meta_orchestration/registry/root_exception_policy.yaml" >> $GITHUB_OUTPUT

      - name: Execute ROOT-IMMUNITY Daemon
        id: immunity_check
        run: |
          echo "==================== ROOT-IMMUNITY ENGINE ===================="
          python 23_compliance/guards/root_immunity_daemon.py --check
          EXIT_CODE=$?

          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

          if [ $EXIT_CODE -ne 0 ]; then
            echo "::error::ROOT-24-LOCK violations detected"
          fi

          exit $EXIT_CODE
        continue-on-error: true

      - name: Upload Violation Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: root-immunity-violation-log
          path: 02_audit_logging/reports/root_immunity_events.jsonl
          if-no-files-found: ignore

      - name: Generate Compliance Report
        id: report
        if: always()
        run: |
          echo "Generating compliance report..."
          python 23_compliance/guards/root_immunity_daemon.py --report > root_immunity_report.json

          # Extract metrics
          VIOLATIONS=$(python -c "import json; data=json.load(open('root_immunity_report.json')); print(data['violation_count'])")
          COMPLIANT=$(python -c "import json; data=json.load(open('root_immunity_report.json')); print(str(data['compliant']).lower())")
          ALLOWED_ROOTS=$(python -c "import json; data=json.load(open('root_immunity_report.json')); print(data['allowed_roots_count'])")

          echo "violations=$VIOLATIONS" >> $GITHUB_OUTPUT
          echo "compliant=$COMPLIANT" >> $GITHUB_OUTPUT
          echo "allowed_roots=$ALLOWED_ROOTS" >> $GITHUB_OUTPUT

      - name: Upload Compliance Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: root-immunity-compliance-report
          path: root_immunity_report.json

      - name: Evaluate OPA Policy (if OPA installed)
        id: opa_eval
        if: always()
        run: |
          # Check if OPA is available
          if command -v opa &> /dev/null; then
            echo "OPA found, evaluating policy..."

            # Generate input for OPA
            python 23_compliance/guards/root_immunity_daemon.py --report > opa_input.json

            # Evaluate policy
            opa eval -d 23_compliance/policies/opa/root_immunity.rego \
                     -i opa_input.json \
                     "data.root_immunity.allow"

            OPA_EXIT=$?
            echo "opa_result=$OPA_EXIT" >> $GITHUB_OUTPUT
          else
            echo "OPA not installed, skipping policy evaluation"
            echo "opa_result=skip" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Block Merge on Violations
        if: steps.immunity_check.outputs.exit_code != '0'
        run: |
          echo "============================================================"
          echo "❌ ROOT-24-LOCK VIOLATIONS DETECTED"
          echo "============================================================"
          echo ""
          echo "Violations: ${{ steps.report.outputs.violations }}"
          echo "Allowed Roots: ${{ steps.report.outputs.allowed_roots }}"
          echo ""
          echo "This merge is BLOCKED until violations are resolved."
          echo ""
          echo "Action Required:"
          echo "  1. Review violation log (uploaded as artifact)"
          echo "  2. Move files to appropriate root directories"
          echo "  3. Or add to exception policy if legitimate"
          echo ""
          echo "Registry: 24_meta_orchestration/registry/root_structure_manifest.yaml"
          echo "Exceptions: 24_meta_orchestration/registry/root_exception_policy.yaml"
          echo ""
          exit 1

      - name: Comment on PR (if violations)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const violations = '${{ steps.report.outputs.violations }}';
            const allowedRoots = '${{ steps.report.outputs.allowed_roots }}';

            const comment = `## 🚨 ROOT-IMMUNITY ENGINE: Violations Detected

            The ROOT-24-LOCK enforcement gate has detected violations in this PR.

            ### Metrics
            - **Violations:** ${violations}
            - **Allowed Roots:** ${allowedRoots}/24
            - **Compliant:** ❌ NO

            ### What This Means

            Files have been added or modified outside the 24 allowed root directories. This violates the ROOT-24-LOCK architecture constraint.

            ### Action Required

            1. **Review Violations:** Download the \`root-immunity-violation-log\` artifact from this workflow run
            2. **Move Files:** Relocate files to appropriate root directories (01-24)
            3. **Or Add Exception:** If files are legitimately at root level (like LICENSE, README), add them to:
               \`\`\`
               24_meta_orchestration/registry/root_exception_policy.yaml
               \`\`\`

            ### Allowed Roots (24)

            \`\`\`
            01_ai_layer, 02_audit_logging, 03_core, 04_deployment,
            05_documentation, 06_data_pipeline, 07_governance_legal,
            08_identity_score, 09_meta_identity, 10_interoperability,
            11_test_simulation, 12_tooling, 13_ui_layer, 14_zero_time_auth,
            15_infra, 16_codex, 17_observability, 18_data_layer,
            19_adapters, 20_foundation, 21_post_quantum_crypto,
            22_quantum_vaults, 23_compliance, 24_meta_orchestration
            \`\`\`

            ### References

            - [ROOT-IMMUNITY Engine](23_compliance/guards/root_immunity_daemon.py)
            - [OPA Policy](23_compliance/policies/opa/root_immunity.rego)
            - [Exception Policy](24_meta_orchestration/registry/root_exception_policy.yaml)

            ---

            **This PR cannot be merged until violations are resolved.**

            🤖 Generated with [Claude Code](https://claude.com/claude-code)
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Update Job Summary
        if: always()
        run: |
          echo "## ROOT-IMMUNITY ENGINE - Hard Gate Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +%Y-%m-%d\ %H:%M:%S) UTC" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.immunity_check.outputs.exit_code }}" == "0" ]; then
            echo "### ✅ Status: COMPLIANT" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All files comply with ROOT-24-LOCK architecture." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Status: VIOLATIONS DETECTED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Violations:** ${{ steps.report.outputs.violations }}" >> $GITHUB_STEP_SUMMARY
            echo "**Allowed Roots:** ${{ steps.report.outputs.allowed_roots }}/24" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Merge BLOCKED until violations are resolved." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Compliance Report: \`root_immunity_report.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- Violation Log: \`02_audit_logging/reports/root_immunity_events.jsonl\`" >> $GITHUB_STEP_SUMMARY

      - name: Success Message
        if: steps.immunity_check.outputs.exit_code == '0'
        run: |
          echo "============================================================"
          echo "✅ ROOT-IMMUNITY ENGINE: COMPLIANT"
          echo "============================================================"
          echo ""
          echo "All files comply with ROOT-24-LOCK architecture."
          echo "Merge approved from ROOT-IMMUNITY perspective."
          echo ""
