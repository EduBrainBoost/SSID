name: Test Integration Audit

# Systematic test discovery and integration analysis
# Verifies all tests are properly integrated with pytest

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*test*.py'
      - '12_tooling/analysis/test_inventory_audit.py'
      - '12_tooling/analysis/test_inventory_policy.yaml'
      - '.github/workflows/ci_test_integration_audit.yml'
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 06:00 UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Step 1: Run unit tests for the audit tool itself
  test-audit-tool:
    name: Test Audit Tool
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pyyaml

      - name: Run audit tool unit tests
        run: |
          pytest 11_test_simulation/tests/12_tooling/test_test_inventory_audit.py \
            -v --tb=short \
            --junit-xml=test-results-audit-tool.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-audit-tool
          path: test-results-audit-tool.xml
          retention-days: 30

  # Step 2: Run the full repository audit
  run-audit:
    name: Run Test Inventory Audit
    runs-on: ubuntu-latest
    needs: test-audit-tool
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pyyaml

      - name: Run test inventory audit
        id: audit
        continue-on-error: true
        run: |
          python 12_tooling/analysis/test_inventory_audit.py \
            --repo-root . \
            --policy 12_tooling/analysis/test_inventory_policy.yaml \
            --json-out 02_audit_logging/logs/test_inventory_audit.json \
            --md-out 02_audit_logging/reports/TEST_INTEGRATION_AUDIT.md

      - name: Display audit summary
        if: always()
        run: |
          echo "=== Test Integration Audit Summary ==="
          if [ -f 02_audit_logging/reports/TEST_INTEGRATION_AUDIT.md ]; then
            head -n 30 02_audit_logging/reports/TEST_INTEGRATION_AUDIT.md
          else
            echo "⚠️ Audit report not generated"
          fi

      - name: Upload audit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-integration-audit-reports
          path: |
            02_audit_logging/logs/test_inventory_audit.json
            02_audit_logging/reports/TEST_INTEGRATION_AUDIT.md
            02_audit_logging/logs/test_inventory_score_log.json
          retention-days: 30

      - name: Check audit status
        if: always()
        run: |
          if [ -f 02_audit_logging/logs/test_inventory_audit.json ]; then
            echo "✅ Audit reports generated successfully"

            # Display key metrics
            python -c "
          import json
          with open('02_audit_logging/logs/test_inventory_audit.json') as f:
              data = json.load(f)
          summary = data.get('summary', {})
          print(f\"Raw files: {summary.get('total_files_raw')}\")
          print(f\"Effective files: {summary.get('total_files_effective')}\")
          print(f\"Pytest discovered: {summary.get('pytest_discovered')}\")
          if summary.get('pass_rate'):
              print(f\"Discovery ratio: {summary['pass_rate']:.2%}\")
          "
          else
            echo "⚠️ Audit reports not found"
          fi
