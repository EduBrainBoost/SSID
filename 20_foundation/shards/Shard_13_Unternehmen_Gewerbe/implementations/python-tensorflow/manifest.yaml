# SSID Project - manifest.yaml (Implementation Manifest)
# Root: 20_foundation
# Shard: Shard_13_Unternehmen_Gewerbe
# Implementation: python-tensorflow
# Auto-generated: 2025-10-05T15:29:16.202995Z

metadata:
  implementation_id: "python-tensorflow"
  implementation_version: "1.0.0"
  chart_version: "2.0.0"
  maturity: "production"
  language: "python"
  framework: "tensorflow"
  is_default_implementation: true

technology_stack:
  language:
    name: "python"
    version: "3.11.5"
    version_range: ">=3.11.0,<3.12.0"
  frameworks:
    ml:
      - name: "tensorflow"
        version: "2.15.0"
        version_range: ">=2.14.0,<3.0.0"
        alternatives:
          - "pytorch>=2.0"
      - name: "scikit-learn"
        version: "1.3.2"
      - name: "numpy"
        version: "1.26.2"
    api:
      - name: "fastapi"
        version: "0.104.1"
      - name: "uvicorn"
        version: "0.24.0"
    utilities:
      - name: "pydantic"
        version: "2.5.0"
      - name: "pyyaml"
        version: "6.0.1"
      - name: "cryptography"
        version: "41.0.7"
  testing:
    - "pytest==7.4.3"
    - "pytest-cov==4.1.0"
    - "schemathesis==3.19.7"
    - "httpx==0.25.1"
  linting_formatting:
    - "black==23.11.0"
    - "ruff==0.1.6"
    - "mypy==1.7.0"
    - "bandit==1.7.5"
    - "semgrep==1.45.0"

artifacts:
  source_code:
    location: "src/"
    structure:
      - "main.py"
      - "api/endpoints.py"
      - "api/middleware.py"
      - "api/auth.py"
      - "api/health.py"
      - "services/business_risk_scorer.py"
      - "services/business_matcher.py"
      - "services/trust_evaluator.py"
      - "models/risk_scoring_model.py"
      - "models/business_feature_extractor.py"
      - "utils/hasher.py"
      - "utils/pii_detector.py"
      - "utils/bias_monitor.py"
      - "grpc_handlers/handler.py"
  configuration:
    location: "config/"
    files:
      - "settings.yaml"
      - "model_config.yaml"
      - "logging.yaml"
      - "redis.yaml"
      - "vault.yaml"
  tests:
    location: "tests/"
    structure:
      - "unit/"
      - "integration/"
      - "fixtures/"
      - "performance/"
    note: "Tests are BOTH local AND central (11_test_simulation)"
  models:
    location: "models/"
    files:
      - "business_risk_scorer_v2.1.h5"
      - "business_feature_extractor_v1.3.h5"
  protocols:
    location: "proto/"
    files:
      - "business.proto"
  documentation:
    location: "docs/"
    files:
      - "getting-started.md"
      - "api-usage.md"
      - "model_cards/"
  scripts:
    location: "scripts/"
    files:
      - "train_model.sh"
      - "run_migrations.sh"
  docker:
    files:
      - "Dockerfile"
      - "docker-compose.yml"

dependencies:
  python_packages: "requirements.txt"
  development_packages: "requirements-dev.txt"
  system_dependencies:
    - "libssl-dev"
    - "build-essential"
  external_services:
    - root: "02_audit_logging"
      endpoint: "http://audit-logging.ssid.local:8080"
    - root: "17_observability"
      endpoint: "http://observability.ssid.local:9090"

build:
  commands:
    install_dependencies: "pip install -r requirements.txt"
    compile_protos: "python -m grpc_tools.protoc"
    run_tests: "pytest -v --cov=src --cov-report=html"
    lint: "ruff check src/ && black --check src/ && mypy src/"
    security_scan: "bandit -r src/ && semgrep --config auto src/"
  optimization:
    strip_debug_symbols: true
    compile_bytecode: true
    wheel_caching: true
  docker:
    build_command: "docker build -t ssid/foundation-business:latest ."
    image_registry: "registry.ssid.local"

deployment:
  kubernetes:
    manifests_location: "k8s/"
    files:
      - "deployment.yaml"
      - "service.yaml"
      - "configmap.yaml"
      - "secret.yaml"
      - "hpa.yaml"
      - "ingress.yaml"
  helm:
    chart_location: "helm/"
  environment_variables:
    required:
      - "REDIS_URL"
      - "AUDIT_LOG_ENDPOINT"
      - "VAULT_ADDR"
    optional:
      - "LOG_LEVEL"
      - "METRICS_PORT"
      - "MODEL_VERSION"
  rollback:
    automatic: true
    conditions:
      - "error_rate > 5%"
      - "latency_p95 > 100ms"
    retention_versions: 3

testing:
  unit_tests:
    command: "pytest tests/unit/"
    coverage_target: 90
    pass_threshold: 90
    fail_threshold: 80
  integration_tests:
    command: "pytest tests/integration/"
    coverage_target: 80
  contract_tests:
    command: "schemathesis run ../contracts/*.openapi.yaml"
  security_tests:
    static_analysis: "bandit -r src/"
    dynamic_analysis: "zap-baseline.py"
  performance_tests:
    tool: "locust"
    target_rps: 1000

observability:
  metrics:
    exporter: "prometheus_client"
    port: 9090
    custom_metrics:
      - "http_requests_total"
      - "processing_duration"
      - "model_drift"
  tracing:
    exporter: "jaeger"
    endpoint: "http://jaeger.ssid.local:14268/api/traces"
    sample_rate: 0.1
  logging:
    format: "json"
    pii_redaction: true
    handlers:
      - "console"
      - "loki"
  health_checks:
    liveness: "/health/live"
    readiness: "/health/ready"
  alerting:
    rules:
      - name: "high_error_rate"
        condition: "error_rate > 0.05"
        severity: "critical"
        notification:
          - "slack://alerts"
          - "pagerduty://on-call"

development:
  setup:
    steps:
      - "python -m venv venv"
      - "source venv/bin/activate"
      - "pip install -r requirements-dev.txt"
      - "pre-commit install"
  local_development:
    docker_compose: true
    hot_reload: true
  pre_commit_hooks:
    - "black"
    - "ruff"
    - "mypy"

compliance:
  non_custodial_enforcement:
    - "No PII in service metadata"
    - "Hash-only references"
  gdpr_compliance:
    - "Right to erasure: hash rotation"
    - "Data portability: JSON export"
  bias_fairness:
    - "Mandatory bias testing"
    - "Quarterly audits"
  dora_compliance:
    - "Incident response plan required"
    - "4h notification for major incidents"
    - "14-day final report"
  regulatory_matrix:
    uk:
      ico_uk_gdpr:
        mandatory: true
        requirements:
          - "dpa_2018_alignment"
          - "dpo_contact_records"
    singapore:
      mas_pdpa:
        mandatory: true
        requirements:
          - "data_breach_notification"
          - "consent_purposes_documented"
    japan:
      jfsa_appi:
        mandatory: true
    australia:
      au_privacy_act_1988:
        mandatory: true

performance:
  baseline_benchmarks:
    - metric: "inference_latency_p95"
      value: "50ms"
    - metric: "throughput_rps"
      value: "1000"
    - metric: "memory_usage"
      value: "800MB"
  optimization_targets:
    - "Reduce latency to <30ms p95"
    - "Increase throughput to 2000 rps"
    - metric: "memory_usage"
      target: "<1GB"
  profiling:
    enabled: true
    tool: "py-spy"
    sample_rate: 100
  resource_requirements:
    minimum:
      cpu: "2 cores"
      memory: "8Gi"
    recommended:
      cpu: "4 cores"
      memory: "16Gi"

changelog:
  location: "CHANGELOG.md"
  latest_versions:
    - version: "1.0.0"
      date: "2025-10-05"
      changes:
        - "Initial release"
        - "Core functionality"
        - "Hash-only implementation"

support:
  documentation: "https://docs.ssid.example/foundation/Shard_13_Unternehmen_Gewerbe/"
  contacts:
    general: "support@example.local"
    security: "security@example.local"
    on_call: "oncall@example.local"
  runbooks:
    - title: "High Latency Debugging"
      url: "https://docs.ssid.example/runbooks/high-latency"
    - title: "Memory Leak Investigation"
      url: "https://docs.ssid.example/runbooks/memory-leak"
    - title: "DORA Incident Response"
      url: "https://docs.ssid.example/runbooks/dora-incident"
