name: KYC Gateway CI/CD

on:
  push:
    branches: [main]
    paths:
      - '14_zero_time_auth/kyc_gateway/**'
      - '23_compliance/policies/kyc_delegation_policy.rego'
      - '04_deployment/ci/ci_kyc_gateway.yml'
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  COVERAGE_THRESHOLD: 90

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy PyJWT cryptography pyyaml

      - name: Lint with ruff
        run: |
          ruff check 14_zero_time_auth/kyc_gateway/*.py

      - name: Type check with mypy
        run: |
          mypy 14_zero_time_auth/kyc_gateway/*.py --strict --ignore-missing-imports || true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov PyJWT cryptography pyyaml

      - name: Run tests with coverage
        run: |
          pytest 14_zero_time_auth/kyc_gateway/tests/ \
            -v \
            --cov=14_zero_time_auth/kyc_gateway \
            --cov-report=term \
            --cov-report=json \
            --cov-fail-under=${{ env.COVERAGE_THRESHOLD }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.json
          retention-days: 30

  opa-policy-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: Validate OPA policy
        run: |
          opa test 23_compliance/policies/kyc_delegation_policy.rego -v || true

      - name: OPA policy evaluation (mock input)
        run: |
          echo '{"mode": "proof_only", "provider_id": "didit", "digest": "a3c5f8d2e9b1047c6d8e2f5a9b3c7d1e4f6a8b9c0d1e2f3a4b5c6d7e8f9a0b1c", "signature_algorithm": "RS256", "claims_size": 1024, "max_claim_size_bytes": 10240, "no_custody_mode": true, "operation": "proof_verified", "allowed_providers": [], "claims": {"kyc_level": "basic"}}' > /tmp/opa_input.json
          opa eval --data 23_compliance/policies/kyc_delegation_policy.rego --input /tmp/opa_input.json "data.kyc.delegation.policy_pass"

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Security scan with pip-audit
        run: |
          pip-audit --desc || true

  openapi-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenAPI validator
        run: |
          npm install -g @apidevtools/swagger-cli

      - name: Validate OpenAPI spec
        run: |
          swagger-cli validate 14_zero_time_auth/kyc_gateway/openapi.yaml

  generate-artifacts:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test, opa-policy-check, security-scan, openapi-validation]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Generate checksums
        run: |
          mkdir -p 02_audit_logging/reports
          cd 14_zero_time_auth/kyc_gateway
          sha256sum provider_registry.yaml openapi.yaml proof_verifier.py kyc_callback_handler.py config.example.yaml > ../../02_audit_logging/reports/kyc_gateway_checksums.txt

      - name: Generate status badge
        run: |
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="90" height="20"><rect width="90" height="20" fill="#4c1"/><text x="45" y="15" fill="#fff" text-anchor="middle" font-family="sans-serif" font-size="11">KYC: PASS</text></svg>' > 02_audit_logging/reports/kyc_gateway_badge.svg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kyc-gateway-artifacts
          path: |
            14_zero_time_auth/kyc_gateway/openapi.yaml
            14_zero_time_auth/kyc_gateway/provider_registry.yaml
            02_audit_logging/reports/kyc_gateway_checksums.txt
            02_audit_logging/reports/kyc_gateway_badge.svg
          retention-days: 90

  notify:
    runs-on: ubuntu-latest
    needs: [generate-artifacts]
    if: always()
    steps:
      - name: Notification
        run: |
          if [ "${{ needs.generate-artifacts.result }}" == "success" ]; then
            echo "✅ KYC Gateway CI/CD: PASS"
          else
            echo "❌ KYC Gateway CI/CD: FAIL"
          fi
