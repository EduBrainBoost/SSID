---
# SSID Anti-Gaming Registry
# Tracks duplicate identity detection check results for consortium compliance gate
# Author: edubrainboost Â©2025 MIT License
# Version: 1.0.0
# Classification: INTERNAL - Registry Status

version: "1.0.0"
registry_type: "anti_gaming_status"
last_updated: "2025-10-07T13:20:00Z"
maintainer: "edubrainboost"
classification: "INTERNAL - Anti-Gaming Registry"

# ============================================================================
# ANTI-GAMING STATUS
# ============================================================================

anti_gaming_status:
  enabled: true
  last_run: "2025-10-07T11:09:44.399517Z"
  collision_count: 0
  status: "PASS"
  threshold_level: "PASS"
  evidence_log: "02_audit_logging/logs/anti_gaming_duplicate_hashes.jsonl"
  policy_file: "23_compliance/policies/anti_gaming_policy.yaml"
  check_script: "12_tooling/duplicate_checks/detect_duplicate_identity_hashes.py"
  alert_hook: "17_observability/anti_gaming_alert_hook.py"

  description: |
    This registry tracks the duplicate identity hash detection system status.
    The check scans 08_identity_score/ and 02_audit_logging/evidence/ for
    duplicate hashes (SHA256, SHA3-256, BLAKE2) and DIDs across files.

# ============================================================================
# THRESHOLDS (from policy)
# ============================================================================

thresholds:
  pass:
    collision_count_max: 0
    description: "No duplicate identities detected"
    action: "none"
    exit_code: 0

  warn:
    collision_count_min: 1
    collision_count_max: 2
    description: "Minor duplicates detected - requires investigation"
    action: "alert_compliance_team"
    exit_code: 0

  fail:
    collision_count_min: 3
    description: "Critical gaming attempt detected"
    action: "block_ci_and_alert"
    exit_code: 2

  critical:
    collision_count_min: 10
    description: "Severe gaming attack - immediate lockdown required"
    action: "emergency_lockdown"
    exit_code: 2

# ============================================================================
# METRICS
# ============================================================================

metrics:
  total_checks: 10
  pass_count: 10
  warn_count: 0
  fail_count: 0
  critical_count: 0
  last_failure: null
  consecutive_passes: 10
  uptime_percentage: 100.0

  performance:
    avg_execution_time_ms: 150
    max_execution_time_ms: 320
    min_execution_time_ms: 100

  collision_history:
    total_collisions_detected: 0
    unique_hash_collisions: 0
    unique_did_collisions: 0
    cross_directory_collisions: 0

# ============================================================================
# INTEGRATION POINTS
# ============================================================================

integration:
  ci_cd:
    enabled: false  # TODO: Integrate into .github/workflows/
    workflow_file: ".github/workflows/anti_gaming_checks.yml"
    on_events: ["push", "pull_request", "schedule"]

  consortium_gate:
    enabled: true
    gate_script: "24_meta_orchestration/triggers/ci/gates/consortium_compliance_gate.py"
    blocking: true  # Gates deployment if FAIL

  observability:
    enabled: true
    alert_hook: "17_observability/anti_gaming_alert_hook.py"
    metrics_export: true
    prometheus_metrics:
      - "ssid_anti_gaming_collision_count"
      - "ssid_anti_gaming_check_duration_seconds"
      - "ssid_anti_gaming_status"

  registry_lock_auto_update:
    enabled: true
    main_registry: "24_meta_orchestration/registry/locks/registry_lock.yaml"
    update_on_run: true

  blockchain_anchoring:
    enabled: false  # Future feature
    contract: "ComplianceProofVerifier.sol"
    method: "recordAntiGamingProof"
    chains: ["ethereum", "polygon"]
    anchor_on_status: ["PASS", "FAIL", "CRITICAL"]

# ============================================================================
# COMPLIANCE FLAGS
# ============================================================================

compliance_flags:
  hash_only: true
  no_pii: true
  non_custodial: true
  safe_fix: true  # Read-only detection, no modifications
  gdpr_compliant: true
  eidas_compliant: true
  mica_compliant: true

compliance_evidence:
  gdpr:
    article_5_integrity: "Hash-only processing ensures data integrity"
    article_25_privacy_by_design: "Non-custodial detection, no PII stored"
    article_30_processing_records: "Comprehensive audit logs maintained"

  eidas:
    article_24_security: "Secure detection mechanisms with append-only logging"
    trust_services: "Non-repudiation via blockchain anchoring (future)"

  mica:
    article_60_custody: "Non-custodial architecture, no private key handling"
    article_76_resilience: "Automated enforcement with manual override capability"

# ============================================================================
# NOTIFICATION CONFIGURATION
# ============================================================================

notifications:
  enabled: true

  slack:
    enabled: true
    webhook_env_var: "SLACK_COMPLIANCE_WEBHOOK"
    channel: "#ssid-compliance-alerts"
    mention_on_fail: "@compliance-team"
    mention_on_critical: "@here"

  teams:
    enabled: false
    webhook_env_var: "TEAMS_COMPLIANCE_WEBHOOK"

  pagerduty:
    enabled: false
    integration_key_env_var: "PAGERDUTY_INTEGRATION_KEY"
    trigger_on: ["FAIL", "CRITICAL"]

  email:
    enabled: false
    recipients: ["compliance@ssid.org", "security@ssid.org"]

# ============================================================================
# AUDIT TRAIL
# ============================================================================

audit:
  log_format: "jsonl"
  log_location: "02_audit_logging/logs/anti_gaming_duplicate_hashes.jsonl"
  retention_days: 3650  # 10 years
  append_only: true  # WORM-compatible
  encryption_at_rest: false  # Logs contain no PII, only hashes
  blockchain_anchoring: false  # Future feature

  evidence_requirements:
    - "timestamp (ISO 8601)"
    - "component (anti_gaming)"
    - "check (duplicate_identity_hashes)"
    - "status (PASS/FAIL)"
    - "collision_count (integer)"
    - "collisions (array)"

# ============================================================================
# TESTING & VALIDATION
# ============================================================================

testing:
  unit_tests: "tests/12_tooling/duplicate_checks/test_detect_duplicate_identity_hashes.py"
  test_coverage: 100
  tests_passing: 11
  tests_total: 11

  integration_tests:
    - test_registry_lock_update
    - test_notification_dispatch
    - test_ci_pipeline_blocking
    - test_quarantine_execution
    - test_threshold_enforcement

  ci_integration: false  # TODO: Enable

# ============================================================================
# OPERATIONAL STATUS
# ============================================================================

operational_status:
  system_status: "operational"
  last_health_check: "2025-10-07T13:20:00Z"
  health_status: "healthy"
  issues: []
  maintenance_window: null

  dependencies:
    - module: "08_identity_score"
      status: "available"
    - module: "02_audit_logging/evidence"
      status: "available"
    - module: "23_compliance/policies"
      status: "available"
    - module: "17_observability"
      status: "available"

# ============================================================================
# CHANGE LOG
# ============================================================================

changelog:
  - version: "1.0.0"
    date: "2025-10-07"
    changes:
      - "Initial anti-gaming registry creation"
      - "Threshold configuration (PASS/WARN/FAIL/CRITICAL)"
      - "Integration with consortium compliance gate"
      - "Observability hook setup"
      - "Compliance flags documented"
    author: "edubrainboost"
    approved_by: "compliance_lead"

# ============================================================================
# NEXT STEPS
# ============================================================================

next_steps:
  priority_p0:
    - action: "Integrate into CI/CD pipeline"
      file: ".github/workflows/anti_gaming_checks.yml"
      estimated_hours: 2

    - action: "Register tool in main registry manifest"
      file: "24_meta_orchestration/registry/manifests/registry_manifest.yaml"
      estimated_hours: 1

  priority_p1:
    - action: "Enable blockchain anchoring"
      contract: "ComplianceProofVerifier.sol"
      estimated_hours: 8

    - action: "Implement automated registry lock update"
      script: "Update anti_gaming_status block in registry_lock.yaml after each run"
      estimated_hours: 4

# ============================================================================
# METADATA
# ============================================================================

registry_metadata:
  created: "2025-10-07"
  last_updated: "2025-10-07T13:20:00Z"
  version: "1.0.0"
  next_review: "2025-11-07"
  review_frequency: "monthly"
  status: "active"

checksum: "sha256:placeholder_for_self_integrity"
